{"ast":null,"code":"var _jsxFileName = \"/Users/loc/Desktop/Portfolio mo\\u0302n 5 /asm1/Assignment 01 Frontend/src/components/browse/MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original';\nconst movies_limit = 10;\n\nfunction MovieList(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl('');\n    } else {\n      setSelectedMovie(movie);\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || '').then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"movie-list-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters sc2\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => handleClick(movie),\n          className: `row_poster ${isLargeRow && 'row_posterLarge'}`,\n          src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: movie.name\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '40px'\n      },\n      children: selectedMovie && /*#__PURE__*/_jsxDEV(MovieDetail, {\n        movieData: selectedMovie,\n        movieTrailer: trailerUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MovieList, \"u2iTSvbk9dvZ8DEaIIpgJs7ovYY=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetchData","request","get","data","results","handleClick","movie","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","sort","a","b","popularity","splice","map","poster_path","backdrop_path","name","padding"],"sources":["/Users/loc/Desktop/Portfolio moÌ‚n 5 /asm1/Assignment 01 Frontend/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\nconst movies_limit = 10;\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState('');\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tsetMovies(request.data.results);\n\t\t\treturn request;\n\t\t}\n\t\tfetchData();\n\t}, [fetchUrl]);\n\n\tconst handleClick = (movie) => {\n\t\tif (selectedMovie && selectedMovie.id === movie.id) {\n\t\t\tsetSelectedMovie(null);\n\t\t\tsetTrailerUrl('');\n\t\t} else {\n\t\t\tsetSelectedMovie(movie);\n\t\t\tmovieTrailer(movie?.title || '')\n\t\t\t.then((url) => {\n\t\t\t\tconst urlParams = new URLSearchParams(new URL(url).search);\n\t\t\t\tsetTrailerUrl(urlParams.get('v'));\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t\t}\n\t};\n\n\tmovies.sort((a, b) => b.popularity - a.popularity);\n\tmovies.splice(movies_limit);\n\n\treturn (\n\t\t<div className='row'>\n\t\t\t<h2 className=\"movie-list-title\">{title}</h2>\n\t\t\t<div className='row_posters sc2'>\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\tonClick={() => handleClick(movie)}\n\t\t\t\t\t\t\tclassName={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n\t\t\t\t\t\t\tsrc={`${base_url}${\n\t\t\t\t\t\t\t\tisLargeRow ? movie.poster_path : movie.backdrop_path\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div style={{ padding: '40px' }}>\n\t\t\t\t{selectedMovie && <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
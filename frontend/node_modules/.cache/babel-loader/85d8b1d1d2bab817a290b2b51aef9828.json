{"ast":null,"code":"var _jsxFileName = \"/Users/loc/Desktop/Portfolio mo\\u0302n 5 /asm1/Frontend/src/components/browse/MovieList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\n// import movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 10;\nfunction MovieList(_ref) {\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios.get(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        params: {\n          page: 1\n        }\n      }).then(response => {\n        // console.log(\"response.data:\", response.data);\n        setMovies(response.data.movies);\n        movies.sort((a, b) => b.popularity - a.popularity);\n        movies.splice(movies_limit);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    fetchData();\n  }, [fetchUrl]);\n  const handleClick = movie => {\n    axios.post(\"/api/movies/video?token=8qlOkxz4wq\", {\n      id: movie.id\n    }).then(response => {\n      setTrailerUrl(response.data.key);\n      setSelectedMovie(movie);\n    }).catch(error => console.log(\"error:\", error));\n    // if (selectedMovie && selectedMovie.id === movie.id) {\n    //   setSelectedMovie(null);\n    //   setTrailerUrl(\"\");\n    // } else {\n    //   setSelectedMovie(movie);\n    //   movieTrailer(movie?.title || \"\")\n    //     .then((url) => {\n    //       const urlParams = new URLSearchParams(new URL(url).search);\n    //       setTrailerUrl(urlParams.get(\"v\"));\n    //     })\n    //     .catch((error) => console.log(error));\n    // }\n  };\n\n  const render = () => {\n    return movies.map(movie => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        key: movie.id,\n        onClick: () => handleClick(movie),\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, movies ? render() : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  }, \"No Movies\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })));\n}\nexport default MovieList;","map":{"version":3,"names":["React","useState","useEffect","axios","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetchData","get","method","headers","params","page","then","response","data","sort","a","b","popularity","splice","catch","error","console","log","handleClick","movie","post","id","key","render","map","poster_path","backdrop_path","name","padding"],"sources":["/Users/loc/Desktop/Portfolio moÌ‚n 5 /asm1/Frontend/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\n// import movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 10;\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios\n        .get(fetchUrl, {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n          params: { page: 1 },\n        })\n        .then((response) => {\n          // console.log(\"response.data:\", response.data);\n          setMovies(response.data.movies);\n          movies.sort((a, b) => b.popularity - a.popularity);\n          movies.splice(movies_limit);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n    axios\n      .post(\"/api/movies/video?token=8qlOkxz4wq\", { id: movie.id })\n      .then((response) => {\n        setTrailerUrl(response.data.key);\n        setSelectedMovie(movie);\n      })\n      .catch((error) => console.log(\"error:\", error));\n    // if (selectedMovie && selectedMovie.id === movie.id) {\n    //   setSelectedMovie(null);\n    //   setTrailerUrl(\"\");\n    // } else {\n    //   setSelectedMovie(movie);\n    //   movieTrailer(movie?.title || \"\")\n    //     .then((url) => {\n    //       const urlParams = new URLSearchParams(new URL(url).search);\n    //       setTrailerUrl(urlParams.get(\"v\"));\n    //     })\n    //     .catch((error) => console.log(error));\n    // }\n  };\n\n  const render = () => {\n    return movies.map((movie) => {\n      return (\n        <img\n          key={movie.id}\n          onClick={() => handleClick(movie)}\n          className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n          src={`${base_url}${\n            isLargeRow ? movie.poster_path : movie.backdrop_path\n          }`}\n          alt={movie.name}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"movie-list-title\">{title}</h2>\n      <div className=\"row_posters sc2\">\n        {movies ? render() : <h1>No Movies</h1>}\n      </div>\n      <div style={{ padding: \"40px\" }}>\n        {selectedMovie && (\n          <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
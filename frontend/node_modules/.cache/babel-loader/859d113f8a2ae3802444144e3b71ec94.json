{"ast":null,"code":"var _jsxFileName = \"/Users/loc/Desktop/Portfolio mo\\u0302n 5 /asm1/Frontend/src/components/browse/MovieList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\nconst base_url = 'https://image.tmdb.org/t/p/original'; //??\n\nconst movies_limit = 10; //=20?\n\nfunction MovieList(_ref) {\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    // const fetchData = async () => {\n    // \tawait axios\n    // \t  .get(fetchUrl, {\n    // \t\tmethod: \"GET\",\n    // \t\theaders: { \"Content-Type\": \"application/json\" },\n    // \t\tparams: { page: 1 },\n    // \t  })\n    // \t  .then((response) => {\n    // \t\tconsole.log(response);\n    // \t\tsetMovies(response.data.movies);\n    // \t\tmovies.sort((a, b) => b.popularity - a.popularity);\n    // \t\tmovies.splice(movies_limit);\n    // \t  })\n    // \t  .catch((error) => {\n    // \t\tconsole.log(error);\n    // \t  });\n    //   };\n    //   fetchData();\n\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  // const handleClick = (movie) => {\n  // \taxios\n  // \t\t.post(\"/api/movies/video?token=8qlOkxz4wq\", { id: movie.id })\n  // \t\t.then((response) => {\n  // \t\t\tsetTrailerUrl(response.data.key);\n  // \t\t\tsetSelectedMovie(movie);\n  // \t\t})\n  // \t\t.catch((error) => console.log(error))\n  // };\n\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n\n  // const render = () => {\n  // \treturn movies.map((movie) => {\n  // \t\treturn (\n  // \t\t\t<img\n  // \t\t\t\tkey={movie.id}\n  // \t\t\t\t// onClick={() => handleClick(movie)}\n  // \t\t\t\tclassName={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n  // \t\t\t\tsrc={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n  // \t\t\t\t\t}`}\n  // \t\t\t\talt={movie.name}\n  // \t\t\t/>\n  // \t\t);\n  // \t});\n  // };\n\n  // return (\n  // \t<div className=\"row\">\n  // \t\t<h2 className=\"movie-list-title\">{title}</h2>\n  // \t\t<div className=\"row_posters sc2\">\n  // \t\t\t{movies ? render() : <h1>No Movies</h1>}\n  // \t\t</div>\n  // \t\t<div style={{ padding: \"40px\" }}>\n  // \t\t\t{selectedMovie && (\n  // \t\t\t\t<MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />\n  // \t\t\t)}\n  // \t\t</div>\n  // \t</div>\n  // );\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id\n      // onClick={() => handleClick(movie)}\n      ,\n      className: `row_poster ${isLargeRow && 'row_posterLarge'}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  })));\n}\nexport default MovieList;","map":{"version":3,"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetchData","request","get","data","results","sort","a","b","popularity","splice","map","movie","id","poster_path","backdrop_path","name","padding"],"sources":["/Users/loc/Desktop/Portfolio moÌ‚n 5 /asm1/Frontend/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';  //??\n\nconst movies_limit = 10; //=20?\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState('');\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\n\n\tuseEffect(() => {\n\n\t\t// const fetchData = async () => {\n\t\t// \tawait axios\n\t\t// \t  .get(fetchUrl, {\n\t\t// \t\tmethod: \"GET\",\n\t\t// \t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t// \t\tparams: { page: 1 },\n\t\t// \t  })\n\t\t// \t  .then((response) => {\n\t\t// \t\tconsole.log(response);\n\t\t// \t\tsetMovies(response.data.movies);\n\t\t// \t\tmovies.sort((a, b) => b.popularity - a.popularity);\n\t\t// \t\tmovies.splice(movies_limit);\n\t\t// \t  })\n\t\t// \t  .catch((error) => {\n\t\t// \t\tconsole.log(error);\n\t\t// \t  });\n\t\t//   };\n\t\t//   fetchData();\n\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tsetMovies(request.data.results);\n\t\t\treturn request;\n\t\t}\n\t\tfetchData();\n\n\t}, [fetchUrl]\n\t);\n\n\t// const handleClick = (movie) => {\n\t// \taxios\n\t// \t\t.post(\"/api/movies/video?token=8qlOkxz4wq\", { id: movie.id })\n\t// \t\t.then((response) => {\n\t// \t\t\tsetTrailerUrl(response.data.key);\n\t// \t\t\tsetSelectedMovie(movie);\n\t// \t\t})\n\t// \t\t.catch((error) => console.log(error))\n\t// };\n\n\tmovies.sort((a, b) => b.popularity - a.popularity);\n\tmovies.splice(movies_limit);\n\n\t// const render = () => {\n\t// \treturn movies.map((movie) => {\n\t// \t\treturn (\n\t// \t\t\t<img\n\t// \t\t\t\tkey={movie.id}\n\t// \t\t\t\t// onClick={() => handleClick(movie)}\n\t// \t\t\t\tclassName={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n\t// \t\t\t\tsrc={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n\t// \t\t\t\t\t}`}\n\t// \t\t\t\talt={movie.name}\n\t// \t\t\t/>\n\t// \t\t);\n\t// \t});\n\t// };\n\n\t// return (\n\t// \t<div className=\"row\">\n\t// \t\t<h2 className=\"movie-list-title\">{title}</h2>\n\t// \t\t<div className=\"row_posters sc2\">\n\t// \t\t\t{movies ? render() : <h1>No Movies</h1>}\n\t// \t\t</div>\n\t// \t\t<div style={{ padding: \"40px\" }}>\n\t// \t\t\t{selectedMovie && (\n\t// \t\t\t\t<MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />\n\t// \t\t\t)}\n\t// \t\t</div>\n\t// \t</div>\n\t// );\n\n\treturn (\n\t\t<div className='row'>\n\t\t\t<h2 className=\"movie-list-title\">{title}</h2>\n\t\t\t<div className='row_posters sc2'>\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t// onClick={() => handleClick(movie)}\n\t\t\t\t\t\t\tclassName={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n\t\t\t\t\t\t\tsrc={`${base_url}${\n\t\t\t\t\t\t\t\tisLargeRow ? movie.poster_path : movie.backdrop_path\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div style={{ padding: '40px' }}>\n\t\t\t\t{selectedMovie && <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}\n\nexport default MovieList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAO,iBAAiB;AAExB,MAAMC,QAAQ,GAAG,qCAAqC,CAAC,CAAE;;AAEzD,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAC;;AAEzB,SAASC,SAAS,OAAkC;EAAA,IAAjC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC;EAEjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IAEf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,eAAegB,SAAS,GAAG;MAC1B,MAAMC,OAAO,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACV,QAAQ,CAAC;MACzCG,SAAS,CAACM,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IACf;IACAD,SAAS,EAAE;EAEZ,CAAC,EAAE,CAACR,QAAQ,CAAC,CACZ;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAE,MAAM,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,UAAU,GAAGF,CAAC,CAACE,UAAU,CAAC;EAClDd,MAAM,CAACe,MAAM,CAACpB,YAAY,CAAC;;EAE3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnB;IAAI,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEE,KAAK,CAAM,eAC7C;IAAK,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9BG,MAAM,CAACgB,GAAG,CAAEC,KAAK,IAAK;IACtB,oBACC;MACC,GAAG,EAAEA,KAAK,CAACC;MACX;MAAA;MACA,SAAS,EAAG,cAAanB,UAAU,IAAI,iBAAkB,EAAE;MAC3D,GAAG,EAAG,GAAEL,QAAS,GAChBK,UAAU,GAAGkB,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACG,aACvC,EAAE;MACH,GAAG,EAAEH,KAAK,CAACI,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACf;EAEJ,CAAC,CAAC,CACG,eACN;IAAK,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9BlB,aAAa,iBAAI,oBAAC,WAAW;IAAC,SAAS,EAAEA,aAAc;IAAC,YAAY,EAAEF,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChF,CACD;AAGR;AAEA,eAAeN,SAAS"},"metadata":{},"sourceType":"module"}
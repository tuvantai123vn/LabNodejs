{"ast":null,"code":"var _jsxFileName = \"/Users/thanhtu/Documents/GitHub/ASM2/Frontend/src/components/reverve/reverve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reverve.css\"; // import useFetch from \"../../hooks/useFetch\";\n\nimport { useEffect, useState } from \"react\"; // import { SearchContext } from \"../../context/SearchContext\";\n\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const location = useLocation();\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [data, setData] = useState([]);\n  const id = location.pathname.split(\"/\")[2];\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(`/api/v1/hotels:${id}`);\n      console.log(request.data);\n      setData(request.data);\n    }\n\n    fetchData();\n  });\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = []; // while (date <= end) {\n    //   dates.push(new Date(date).getTime());\n    //   date.setDate(date.getDate() + 1);\n    // }\n\n    return dates;\n  }; // const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n  // const isAvailable = (roomNumber) => {\n  //   const isFound = roomNumber.unavailableDates.some((date) =>\n  //     alldates.includes(new Date(date).getTime())\n  //   );\n  //   return !isFound;\n  // };\n\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {// try {\n    //   await Promise.all(\n    //     selectedRooms.map((roomId) => {\n    //       const res = axios.put(`/rooms/availability/${roomId}`, {\n    //         dates: alldates,\n    //       });\n    //       return res.data;\n    //     })\n    //   );\n    //   setOpen(false);\n    //   navigate(\"/\");\n    // } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"MNrYOWOTBDaz3BbesKIjELT1XXQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["/Users/thanhtu/Documents/GitHub/ASM2/Frontend/src/components/reverve/reverve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useEffect","useState","axios","useNavigate","useLocation","Reserve","setOpen","hotelId","location","selectedRooms","setSelectedRooms","data","setData","id","pathname","split","fetchData","request","get","console","log","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","dates","handleSelect","e","checked","target","value","filter","item","navigate","handleClick"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reverve.css\";\n// import useFetch from \"../../hooks/useFetch\";\nimport { useEffect, useState } from \"react\";\n// import { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Reserve = ({ setOpen, hotelId }) => {\n  const location = useLocation();\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [data, setData] = useState([]);\n  const id = location.pathname.split(\"/\")[2];\n  useEffect( () => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(`/api/v1/hotels:${id}`)\n      console.log(request.data);\n\t\t\tsetData(request.data);\n      \n\t\t}\n    fetchData();\n\t});\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    const date = new Date(start.getTime());\n\n    const dates = [];\n\n    // while (date <= end) {\n    //   dates.push(new Date(date).getTime());\n    //   date.setDate(date.getDate() + 1);\n    // }\n\n    return dates;\n  };\n\n  // const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  // const isAvailable = (roomNumber) => {\n  //   const isFound = roomNumber.unavailableDates.some((date) =>\n  //     alldates.includes(new Date(date).getTime())\n  //   );\n  //   return !isFound;\n  // };\n\n  const handleSelect = (e) => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(\n      checked\n        ? [...selectedRooms, value]\n        : selectedRooms.filter((item) => item !== value)\n    );\n  };\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {\n    // try {\n    //   await Promise.all(\n    //     selectedRooms.map((roomId) => {\n    //       const res = axios.put(`/rooms/availability/${roomId}`, {\n    //         dates: alldates,\n    //       });\n    //       return res.data;\n    //     })\n    //   );\n    //   setOpen(false);\n    //   navigate(\"/\");\n    // } catch (err) {}\n  };\n  return (\n    <div className=\"reserve\">\n      <div className=\"rContainer\">\n        <FontAwesomeIcon\n          icon={faCircleXmark}\n          className=\"rClose\"\n          onClick={() => setOpen(false)}\n        />\n        <span>Select your rooms:</span>\n        {/* {data.map((item) => (\n          <div className=\"rItem\" key={item._id}>\n            <div className=\"rItemInfo\">\n              <div className=\"rTitle\">{item.title}</div>\n              <div className=\"rDesc\">{item.desc}</div>\n              <div className=\"rMax\">\n                Max people: <b>{item.maxPeople}</b>\n              </div>\n              <div className=\"rPrice\">{item.price}</div>\n            </div>\n            <div className=\"rSelectRooms\">\n              {item.roomNumbers.map((roomNumber) => (\n                <div className=\"room\">\n                  <label>{roomNumber.number}</label>\n                  <input\n                    type=\"checkbox\"\n                    value={roomNumber._id}\n                    onChange={handleSelect}\n                    disabled={!isAvailable(roomNumber)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        ))} */}\n        <button onClick={handleClick} className=\"rButton\">\n          Reserve Now!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Reserve;"]},"metadata":{},"sourceType":"module"}
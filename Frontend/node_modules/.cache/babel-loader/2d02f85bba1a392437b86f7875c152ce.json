{"ast":null,"code":"var _jsxFileName = \"/Users/thanhtu/Documents/GitHub/ASM2/Frontend/src/components/reverve/reverve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reverve.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]); // const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\n\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = []; // while (date <= end) {\n    //   dates.push(new Date(date).getTime());\n    //   date.setDate(date.getDate() + 1);\n    // }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  }; // const handleSelect = (e) => {\n  //   const checked = e.target.checked;\n  //   const value = e.target.value;\n  //   setSelectedRooms(\n  //     checked\n  //       ? [...selectedRooms, value]\n  //       : selectedRooms.filter((item) => item !== value)\n  //   );\n  // };\n\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: roomNumber._id,\n              onChange: handleSelect,\n              disabled: !isAvailable(roomNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"JngrJXXH08gF+XXNIEfVNUkhZX4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["/Users/thanhtu/Documents/GitHub/ASM2/Frontend/src/components/reverve/reverve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","axios","useNavigate","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","navigate","handleClick","Promise","all","map","roomId","res","put","data","err","item","title","desc","maxPeople","price","roomNumbers","number","_id","handleSelect"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reverve.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Reserve = ({ setOpen, hotelId }) => {\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  // const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\n  const { dates } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    const date = new Date(start.getTime());\n\n    const dates = [];\n\n    // while (date <= end) {\n    //   dates.push(new Date(date).getTime());\n    //   date.setDate(date.getDate() + 1);\n    // }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = (roomNumber) => {\n    const isFound = roomNumber.unavailableDates.some((date) =>\n      alldates.includes(new Date(date).getTime())\n    );\n    return !isFound;\n  };\n\n  // const handleSelect = (e) => {\n  //   const checked = e.target.checked;\n  //   const value = e.target.value;\n  //   setSelectedRooms(\n  //     checked\n  //       ? [...selectedRooms, value]\n  //       : selectedRooms.filter((item) => item !== value)\n  //   );\n  // };\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(\n        selectedRooms.map((roomId) => {\n          const res = axios.put(`/rooms/availability/${roomId}`, {\n            dates: alldates,\n          });\n          return res.data;\n        })\n      );\n      setOpen(false);\n      navigate(\"/\");\n    } catch (err) {}\n  };\n  return (\n    <div className=\"reserve\">\n      <div className=\"rContainer\">\n        <FontAwesomeIcon\n          icon={faCircleXmark}\n          className=\"rClose\"\n          onClick={() => setOpen(false)}\n        />\n        <span>Select your rooms:</span>\n        {data.map((item) => (\n          <div className=\"rItem\" key={item._id}>\n            <div className=\"rItemInfo\">\n              <div className=\"rTitle\">{item.title}</div>\n              <div className=\"rDesc\">{item.desc}</div>\n              <div className=\"rMax\">\n                Max people: <b>{item.maxPeople}</b>\n              </div>\n              <div className=\"rPrice\">{item.price}</div>\n            </div>\n            <div className=\"rSelectRooms\">\n              {item.roomNumbers.map((roomNumber) => (\n                <div className=\"room\">\n                  <label>{roomNumber.number}</label>\n                  <input\n                    type=\"checkbox\"\n                    value={roomNumber._id}\n                    onChange={handleSelect}\n                    disabled={!isAvailable(roomNumber)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        <button onClick={handleClick} className=\"rButton\">\n          Reserve Now!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Reserve;"]},"metadata":{},"sourceType":"module"}